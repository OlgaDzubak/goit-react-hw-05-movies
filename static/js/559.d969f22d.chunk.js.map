{"version":3,"file":"static/js/559.d969f22d.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/ReviewsItem/reviewsItem.module.css?a4f8","components/ReviewsItem/ReviewsItem.jsx","webpack://goit-react-hw-05-movies/./src/components/ReviewsList/reviews.module.css?3b27","components/ReviewsList/Reviews.jsx","hooks/useFetchMovieReviews.jsx","service/movie-service.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import {ColorRing} from \"react-loader-spinner\";\n\n\n//=======================================================================================================================\n\nexport const Loader = () => { \n    return <ColorRing  colors={['#34659D', '#34659D', '#34659D', '#51E5FF', '#429EA6']} /> \n} \n\nexport default Loader;\n//=======================================================================================================================","// extracted by mini-css-extract-plugin\nexport default {\"authorTitle\":\"reviewsItem_authorTitle__BY+LS\",\"review\":\"reviewsItem_review__OR3Pc\"};","import css from './reviewsItem.module.css';\n\n//===================================================================================\nconst ReviewsItem = ({name='Unknown author', review='No review'}) => {\n    \n    return (\n        <li>\n            <p className={css.authorTitle}>Author : {name}</p>\n            <p className={css.review}>{review}</p>\n        </li>\n    );\n}\n\nexport default ReviewsItem;\n//===================================================================================","// extracted by mini-css-extract-plugin\nexport default {\"ulReviews\":\"reviews_ulReviews__NgN+G\"};","import { useFetchMovieReviews } from '../../hooks/useFetchMovieReviews';\nimport ReviewsItem from '../ReviewsItem/ReviewsItem';\nimport Loader from '../Loader/Loader';\nimport { nanoid } from 'nanoid';\nimport css from './reviews.module.css';\n\n//===================================================================================\nconst Reviews = () => {\n\n    const { movieReviews, isLoading, error} = useFetchMovieReviews();\n    \n    return (\n        <div>\n            <ul className={css.ulReviews}>\n                { movieReviews.map((item) => <ReviewsItem name={item.author} review={item.content} key={nanoid()}/>) }\n            </ul> \n            { isLoading && <Loader/>}\n            { error && <p>{error}</p> }\n        </div>\n    )\n}\n\nexport default Reviews;\n//===================================================================================","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../service/movie-service';\n\nexport const useFetchMovieReviews=() => {\n\n    const [movieReviews, setMovieReviews] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const {movieId: id} = useParams();\n\n    useEffect(()=>{\n\n          setIsLoading(true);\n\n          const fetchData = async () => {\n\n            try {   \n                  const result = await fetchMovieReviews(id);\n                  if (result.length === 0) {setError(\"We don't have any reviews for this movie.\");}\n                  setMovieReviews(result);\n                }\n            catch (error) { setError(error); } \n            finally { setIsLoading(false); }\n          }\n          fetchData();\n\n    }, [id])\n    \n    return {\n      movieReviews,\n      isLoading,\n      error,\n    }\n}","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers = {\n  accept: 'application/json',\n  Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiY2VjMjUzMmU5NmU2NDg0MjM3MGY5MmIxMTU2MGI5OSIsInN1YiI6IjY0OWVlNjVkMDkxZTYyMDEwYzExYTc1YSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.INMvJ5-VALOPV-eJTE5a1aj3iJDUP-1HRPAGZ7gUOkg',\n}\naxios.defaults.params={\n  language: 'en-US',\n}\n\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const searchMovie = async (filter) => {\n  axios.defaults.params = {query: filter, include_adult: 'false', page: '1'};\n  const { data } = await axios.get(`/search/movie`);\n\n  return data.results;\n};\n\nexport const fetchMovieDetails = async (movie_id) => {\n  const { data } = await axios.get(`/movie/${movie_id}`);\n\n  return data;\n};\n\nexport const fetchMovieCast = async (movie_id) => {\n  const { data } = await axios.get(`/movie/${movie_id}/credits`);\n  \n  return data.cast;\n};\n\nexport const fetchMovieReviews = async (movie_id) => {\n  axios.defaults.params = {page: '1'};\n  const { data } = await axios.get(`/movie/${movie_id}/reviews`);\n  \n  return data.results;\n};","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["Loader","colors","name","review","className","css","useState","movieReviews","setMovieReviews","isLoading","setIsLoading","error","setError","id","useParams","movieId","useEffect","fetchData","fetchMovieReviews","result","length","useFetchMovieReviews","map","item","author","content","nanoid","axios","accept","Authorization","language","getTrendingMovies","data","results","searchMovie","filter","query","include_adult","page","fetchMovieDetails","movie_id","fetchMovieCast","cast","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}