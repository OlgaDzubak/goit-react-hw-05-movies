{"version":3,"file":"static/js/613.5ed3f48a.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieList/movieList.module.css?ccba","components/MovieList/MovieList.jsx","helpers/transformMoviesData.js","webpack://goit-react-hw-05-movies/./src/components/SearchForm/searchForm.module.css?a515","components/SearchForm/SearchForm.jsx","pages/SearchMovie.jsx","hooks/useFetchSearch.jsx","service/movie-service.js"],"sourcesContent":["import {ColorRing} from \"react-loader-spinner\";\n\n\n//=======================================================================================================================\n\nexport const Loader = () => { \n    return <ColorRing  colors={['#34659D', '#34659D', '#34659D', '#51E5FF', '#429EA6']} /> \n} \n\nexport default Loader;\n//=======================================================================================================================","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"movieList_movieList__vnqzm\",\"movieList_item\":\"movieList_movieList_item__A9R4M\"};","import { Link, useLocation } from 'react-router-dom';\nimport { paths } from '../../routes';\nimport css from './movieList.module.css';\nimport PropTypes from 'prop-types';\n\n\n//===========================================================================================\nconst MovieList = ({ movies }) => {\n    const location = useLocation();\n\n    return (\n        <ul  className={css.movieList}>\n            {movies.map(({title, id, year}) => {\n                return (\n                    <li key={id} className={css.movieList_item}>\n                        <Link to={`${paths.MOVIES}/${id}`} className={css.link} state={{from : location}}>\n                            {title} {year}\n                        </Link> \n                    </li>\n                )\n            })}\n        </ul>\n    )\n};\n\nexport default MovieList;\n//===========================================================================================\n\nMovieList.propTypes = {\n    movies: PropTypes.array,\n}","\nexport const transformMoviesData = (data) => { \n    return data.map(({id, title, release_date}) => {\n       const year = new Date(release_date).getFullYear();\n       return {id, title, year};\n    })\n};\n  ","// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"searchForm_icon__2owrV\"};","import {ImSearch} from 'react-icons/im';\nimport { useState } from \"react\";\nimport css from './searchForm.module.css';\nimport PropTypes from 'prop-types';\n\n\n//===========================================================================================\nconst SearchForm = ({ onSubmit }) => {\n\n    const [query, setQuery] = useState(\"\");\n\n    const handleSubmit = (e) => {\n      e.preventDefault();\n      if (!query.trim()) return alert('The query is empty! Please, point what do you want to find!');\n      onSubmit(query);\n      setQuery(\"\");\n    };\n\n    const handleChangeQuery = (e) => {\n      setQuery(e.target.value);\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n          <button type=\"submit\"><span><ImSearch className={css.icon}/></span></button>\n          <input\n              type=\"text\"\n              placeholder=\"Search movie\"\n              id=\"input\"\n              value={query}\n              onChange={handleChangeQuery} \n          />\n        </form>\n    );\n};\n\nexport default SearchForm;\n//===========================================================================================\n\nSearchForm.propTypes = {\n  onSubmit : PropTypes.func,\n}\n","import SearchForm from '../components/SearchForm/SearchForm';\nimport Loader from '../components/Loader/Loader';\nimport MovieList from '../components/MovieList/MovieList';\nimport {useFetchSearch} from '../hooks/useFetchSearch';\n\n  //===========================================================================================\n  const SearchMovie = () => {\n\n    const { list, isLoading, error, onChangeParams} = useFetchSearch();\n    \n    return (\n      <main>\n          <section>\n            <div className='container'>\n\n                <SearchForm onSubmit={onChangeParams}/>\n\n                {list.length!==0 && <MovieList movies={list}/>}\n\n                { isLoading && <Loader/> }\n\n                { error && <p>error</p> }\n\n            </div>\n          </section>\n        </main>\n    );\n  };\n  \n  export default SearchMovie;\n  //===========================================================================================","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovie } from '../service/movie-service';\nimport { transformMoviesData} from '../helpers/transformMoviesData';\n\nexport const useFetchSearch=() => {\n\n  const [list, setList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(()=>{\n\n    const search_word = searchParams.get('query')\n\n    setIsLoading(true);\n\n    const fetchData = async () => {\n      try \n        {\n            const result = await searchMovie(search_word);\n            const movieList = transformMoviesData(result);\n            setList(movieList);\n        } \n      catch (error) { setError(error); } \n      finally { setIsLoading(false) }\n    }\n    fetchData();\n\n  }, [searchParams])\n\n  const onChangeParams = (query) => setSearchParams({query}); \n\n  return {\n    list,\n    isLoading,\n    error,\n    onChangeParams,\n  }\n}","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers = {\n  accept: 'application/json',\n  Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiY2VjMjUzMmU5NmU2NDg0MjM3MGY5MmIxMTU2MGI5OSIsInN1YiI6IjY0OWVlNjVkMDkxZTYyMDEwYzExYTc1YSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.INMvJ5-VALOPV-eJTE5a1aj3iJDUP-1HRPAGZ7gUOkg',\n}\naxios.defaults.params={\n  language: 'en-US',\n}\n\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const searchMovie = async (filter) => {\n  axios.defaults.params = {query: filter, include_adult: 'false', page: '1'};\n  const { data } = await axios.get(`/search/movie`);\n\n  return data.results;\n};\n\nexport const fetchMovieDetails = async (movie_id) => {\n  const { data } = await axios.get(`/movie/${movie_id}`);\n\n  return data;\n};\n\nexport const fetchMovieCast = async (movie_id) => {\n  const { data } = await axios.get(`/movie/${movie_id}/credits`);\n  \n  return data.cast;\n};\n\nexport const fetchMovieReviews = async (movie_id) => {\n  axios.defaults.params = {page: '1'};\n  const { data } = await axios.get(`/movie/${movie_id}/reviews`);\n  \n  return data.results;\n};"],"names":["Loader","colors","movies","location","useLocation","className","css","map","title","id","year","to","paths","state","from","transformMoviesData","data","release_date","Date","getFullYear","onSubmit","useState","query","setQuery","e","preventDefault","trim","alert","type","placeholder","value","onChange","target","list","setList","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","useEffect","search_word","get","fetchData","searchMovie","result","movieList","onChangeParams","useFetchSearch","length","MovieList","axios","accept","Authorization","language","getTrendingMovies","results","filter","include_adult","page","fetchMovieDetails","movie_id","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}