{"version":3,"file":"static/js/276.9c9f6411.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/CastList/cast.module.css?a933","webpack://goit-react-hw-05-movies/./src/components/CastItem/castItem.module.css?38a8","components/CastItem/CastItem.jsx","components/CastList/Cast.jsx","hooks/useFetchMovieCast.jsx","components/Loader/Loader.jsx","service/movie-service.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ulCast\":\"cast_ulCast__m9iJC\"};","// extracted by mini-css-extract-plugin\nexport default {\"castImg_div\":\"castItem_castImg_div__yGDPA\",\"castImg\":\"castItem_castImg__S9iSf\",\"noPhoto_p\":\"castItem_noPhoto_p__NEOzx\",\"actorNameTitle\":\"castItem_actorNameTitle__EDrOR\",\"character\":\"castItem_character__KuGjo\"};","import css from './castItem.module.css';\nimport PropTypes from 'prop-types'\n\nexport const CastItem = ({photo, actorName='Unknown actor', character='Unknown'}) => {\n\n    return (\n        <li>\n            <div className={css.castImg_div}>\n                { photo \n                    ? <img src={'https://image.tmdb.org/t/p/w500'+ photo} alt={actorName} className={css.castImg}></img> \n                    : <p className={css.noPhoto_p}>There are no photo of {actorName}</p>\n                }\n            </div>\n            <p className={css.actorNameTitle}>{actorName ? actorName : 'Unknown actor'}</p>\n            <p className={css.character}>Character : <span>{character ? character : 'Unknown'}</span></p>\n        </li>\n    );\n}\n\nCastItem.propTypes = {\n  photo : PropTypes.string,\n  actorName: PropTypes.string,\n  character: PropTypes.string\n}","import css from './cast.module.css';\nimport { useFetchMovieCast } from '../../hooks/useFetchMovieCast';\nimport { CastItem } from '../CastItem/CastItem';\nimport { Loader } from '../Loader/Loader';\nimport { nanoid } from 'nanoid';\n\n//=================================================================================================================\nconst Cast = () => {\n\n    const { movieCast, isLoading, error} = useFetchMovieCast();\n    \n    return (\n        <div>\n\n            <ul className={css.ulCast}>\n                { movieCast.map((item) => <CastItem photo={item.profile_path} actorName={item.name} character={item.character} key={nanoid()}/>) }\n            </ul> \n\n            { isLoading && <Loader/> }\n            { error && <p>{error}</p> }\n\n        </div>\n    )\n}\n\nexport default Cast;\n//=================================================================================================================","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from '../service/movie-service';\n\nexport const useFetchMovieCast=() => {\n\n    const [movieCast, setMovieCast] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const {movieId: id} = useParams();\n\n    useEffect(()=>{\n\n          setIsLoading(true);\n\n          const fetchData = async () => {\n            try {   \n                    const result = await fetchMovieCast(id);\n                    if (result.length === 0) {setError(\"We don't have any cast list for this movie.\");}\n                    setMovieCast(result);\n                }\n            catch (error) { setError(error); } \n            finally { setIsLoading(false); }\n          }\n          fetchData();\n\n    }, [id])\n    \n    return {\n      movieCast,\n      isLoading,\n      error,\n    }\n}","import {ColorRing} from \"react-loader-spinner\";\n\n\n//=======================================================================================================================\n\nexport const Loader = () => { \n    return <ColorRing  colors={['#34659D', '#34659D', '#34659D', '#51E5FF', '#429EA6']} /> \n} \n\nexport default Loader;\n//=======================================================================================================================","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers = {\n  accept: 'application/json',\n  Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiY2VjMjUzMmU5NmU2NDg0MjM3MGY5MmIxMTU2MGI5OSIsInN1YiI6IjY0OWVlNjVkMDkxZTYyMDEwYzExYTc1YSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.INMvJ5-VALOPV-eJTE5a1aj3iJDUP-1HRPAGZ7gUOkg',\n}\naxios.defaults.params={\n  language: 'en-US',\n}\n\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const searchMovie = async (filter) => {\n  axios.defaults.params = {query: filter, include_adult: 'false', page: '1'};\n  const { data } = await axios.get(`/search/movie`);\n\n  return data.results;\n};\n\nexport const fetchMovieDetails = async (movie_id) => {\n  const { data } = await axios.get(`/movie/${movie_id}`);\n\n  return data;\n};\n\nexport const fetchMovieCast = async (movie_id) => {\n  const { data } = await axios.get(`/movie/${movie_id}/credits`);\n  \n  return data.cast;\n};\n\nexport const fetchMovieReviews = async (movie_id) => {\n  axios.defaults.params = {page: '1'};\n  const { data } = await axios.get(`/movie/${movie_id}/reviews`);\n  \n  return data.results;\n};","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["CastItem","_ref","photo","_ref$actorName","actorName","_ref$character","character","_jsxs","children","_jsx","className","css","src","alt","_useFetchMovieCast","_useState","useState","_useState2","_slicedToArray","movieCast","setMovieCast","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","id","useParams","movieId","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","fetchMovieCast","sent","length","t0","finish","stop","apply","arguments","useFetchMovieCast","map","item","profile_path","name","nanoid","Loader","ColorRing","colors","axios","accept","Authorization","language","getTrendingMovies","_yield$axios$get","data","abrupt","results","searchMovie","_ref2","_callee2","filter","_yield$axios$get2","_context2","query","include_adult","page","_x","fetchMovieDetails","_ref3","_callee3","movie_id","_yield$axios$get3","_context3","concat","_x2","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4","size","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}