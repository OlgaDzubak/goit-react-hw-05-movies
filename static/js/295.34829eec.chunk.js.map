{"version":3,"file":"static/js/295.34829eec.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieInfo/movieInfo.module.css?d0c0","components/MovieInfo/MovieInfo.jsx","webpack://goit-react-hw-05-movies/./src/components/GoBackBtn/goBackBtn.module.css?8503","components/GoBackBtn/GoBackBtn.jsx","pages/Movie.jsx","hooks/useFetchMovieDetails.jsx","service/movie-service.js"],"sourcesContent":["import {ColorRing} from \"react-loader-spinner\";\n\n\n//=======================================================================================================================\n\nexport const Loader = () => { \n    return <ColorRing  colors={['#34659D', '#34659D', '#34659D', '#51E5FF', '#429EA6']} /> \n} \n\nexport default Loader;\n//=======================================================================================================================","// extracted by mini-css-extract-plugin\nexport default {\"addInf_div\":\"movieInfo_addInf_div__Ks8VI\",\"addInf_p\":\"movieInfo_addInf_p__mnFbW\",\"release_year\":\"movieInfo_release_year__+rMkA\",\"navLink\":\"movieInfo_navLink__FE5Vl\",\"movieDetails\":\"movieInfo_movieDetails__HyPuY\",\"imgPoster_div\":\"movieInfo_imgPoster_div__AbfuX\",\"imgPoster\":\"movieInfo_imgPoster__ldgyg\",\"noPoster_p\":\"movieInfo_noPoster_p__WUqDd\",\"overViewTitle\":\"movieInfo_overViewTitle__-DSTR\",\"GenresTitle\":\"movieInfo_GenresTitle__+y3k0\"};","import { NavLink } from 'react-router-dom';\nimport { paths } from '../../routes';\nimport css from './movieInfo.module.css';\nimport PropTypes from 'prop-types';\n\n//===========================================================================================\nconst MovieInfo = ({\n    id, \n    title='No title',\n    poster_path,\n    release_year,\n    overview='There ara no overview',\n    genres=[],\n    vote_average = 0}) => {\n    \n    return (\n             <>\n                <div className={css.movieDetails}>\n                    \n                    <div className={css.imgPoster_div}>\n                       { poster_path \n                            ? <img src={poster_path} alt={title} className={css.imgPoster}></img> \n                            : <p className={css.noPoster_p}>There are no poster for this movie</p>\n                       }\n                    </div>\n\n                    <div className={css.movieInfoText}>\n                        <h2 className={css.title}>{title} <span className={css.release_year}>{release_year}</span></h2>\n\n                        <p className={css.userScore}>User score:<span className={css.userScoreRating}> {Math.round(vote_average*10,0)}%</span></p>\n\n                        <p className={css.overViewTitle}>Overview</p>\n                        <p className={css.overView}>{overview}</p>\n\n                        <p className={css.GenresTitle}>Genres</p>\n                        <p className={css.Genres}>{genres.map(item => item.name).join(', ')}</p>\n                    </div>\n                </div>\n\n                <div className={css.addInf_div}>\n                    <p className={css.addInf_p}> Additional information</p>\n                    <ul>\n                        <li><NavLink to={`${paths.MOVIES}/${id}/cast`} className={css.navLink} >Cast</NavLink></li>\n                        <li><NavLink to={`${paths.MOVIES}/${id}/reviews`} className={css.navLink} >Reviews</NavLink></li>\n                    </ul>\n                </div>                \n              </>\n    )\n};\n\nexport default MovieInfo;\n//===========================================================================================\n\nMovieInfo.propTypes = {\n    path : PropTypes.string,\n    id : PropTypes.number, \n    title : PropTypes.string,\n    poster_path : PropTypes.string,\n    release_year : PropTypes.string,\n    overview : PropTypes.string,\n    genres: PropTypes.array,\n    vote_average: PropTypes.number,\n} ","// extracted by mini-css-extract-plugin\nexport default {\"btnLink\":\"goBackBtn_btnLink__ih8pB\"};","import { Link } from 'react-router-dom';\nimport {GoArrowLeft} from 'react-icons/go';\nimport css from './goBackBtn.module.css';\nimport PropTypes from 'prop-types';\n\n//=============================================================================\nconst GoBackBtn = ({ path, children }) => {\n\n    return  (\n            <Link to={path} className={css.btnLink}>\n                <GoArrowLeft/>\n                {children}\n            </Link>\n    )\n}\n\nexport default GoBackBtn;\n//=============================================================================\n\nGoBackBtn.propTypes = {\n    path : PropTypes.object,\n}","import { useRef, Suspense } from 'react';\nimport  MovieInfo from '../components/MovieInfo/MovieInfo';\nimport  Loader from '../components/Loader/Loader';\nimport  GoBackBtn from '../components/GoBackBtn/GoBackBtn';\nimport { useFetchMovieDetails } from '../hooks/useFetchMovieDetails';\nimport { useLocation, Outlet } from 'react-router-dom';\nimport { paths } from '../routes';\n\n//===========================================================================================\nconst Movie = () => {\n  \n    const {movieDetails, isLoading, error} = useFetchMovieDetails();\n    const {id, title, poster_path, genres, overview, release_date, vote_average} = movieDetails;\n    const full_poster_path = poster_path ? 'https://image.tmdb.org/t/p/w500/' + poster_path : poster_path;\n    const release_year = release_date ? '('+new Date(release_date).getFullYear()+')' : release_date;\n\n    const location = useLocation();\n    const refLocation = useRef(location?.state?.from ?? paths.HOME);\n    \n    return (\n        <main>\n            <section>\n                <div className='container'>\n                    <GoBackBtn path={refLocation.current}>Go back!</GoBackBtn>\n                    <MovieInfo  id = {id}\n                                title ={title}\n                                poster_path = {full_poster_path}\n                                release_year = {release_year}\n                                overview = {overview}\n                                genres = {genres}\n                                vote_average = {vote_average}\n                    />\n                    { isLoading && <Loader/> }\n                    { error && <p>error</p> }\n\n                    <Suspense fallback={<div>Loadding...</div>}>\n                        <Outlet/>\n                    </Suspense>\n                </div>\n            </section>\n        </main>\n  );\n};\n\nexport default Movie;\n//===========================================================================================","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieDetails } from '../service/movie-service';;\n\nexport const useFetchMovieDetails=() => {\n\n    const [movieDetails, setMovieDetails] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const {movieId: id} = useParams();\n\n    useEffect(()=>{\n\n          setIsLoading(true);\n\n          const fetchData = async () => {\n            try {   \n                    const result = await fetchMovieDetails(id);\n                    setMovieDetails(result);\n                }\n            catch (error) { setError(error); } \n            finally { setIsLoading(false); }\n          }\n          fetchData();\n\n    }, [id])\n\n    return {\n      movieDetails,\n      isLoading,\n      error,\n    }\n}","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers = {\n  accept: 'application/json',\n  Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiY2VjMjUzMmU5NmU2NDg0MjM3MGY5MmIxMTU2MGI5OSIsInN1YiI6IjY0OWVlNjVkMDkxZTYyMDEwYzExYTc1YSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.INMvJ5-VALOPV-eJTE5a1aj3iJDUP-1HRPAGZ7gUOkg',\n}\naxios.defaults.params={\n  language: 'en-US',\n}\n\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const searchMovie = async (filter) => {\n  axios.defaults.params = {query: filter, include_adult: 'false', page: '1'};\n  const { data } = await axios.get(`/search/movie`);\n\n  return data.results;\n};\n\nexport const fetchMovieDetails = async (movie_id) => {\n  const { data } = await axios.get(`/movie/${movie_id}`);\n\n  return data;\n};\n\nexport const fetchMovieCast = async (movie_id) => {\n  const { data } = await axios.get(`/movie/${movie_id}/credits`);\n  \n  return data.cast;\n};\n\nexport const fetchMovieReviews = async (movie_id) => {\n  axios.defaults.params = {page: '1'};\n  const { data } = await axios.get(`/movie/${movie_id}/reviews`);\n  \n  return data.results;\n};"],"names":["Loader","colors","id","title","poster_path","release_year","overview","genres","vote_average","className","css","src","alt","Math","round","map","item","name","join","to","paths","path","children","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","error","setError","useParams","movieId","useEffect","fetchData","fetchMovieDetails","result","useFetchMovieDetails","release_date","full_poster_path","Date","getFullYear","location","useLocation","refLocation","useRef","state","from","current","Suspense","fallback","axios","accept","Authorization","language","getTrendingMovies","data","results","searchMovie","filter","query","include_adult","page","movie_id","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}